docker build -t localhost:5000/employeeservice .
docker push localhost:5000/employeeservice
docker run -p 8080:8080 springio/gs-spring-boot-docker


to get status 
minikube status 


to start minikube 
minikube start 

to delete all pods 
kubectl delete --all pods  

to get pods 
kubectl get pods 


port forward from service 
kubectl port-forward svc/employeeservice 9090:80


kubernates get all (service,deployment,pods etc)
kubectl get all

--to check logs 

kubectl logs employeeservice-7459bddb67-c79mw

to delete secret 
kubectl delete secret name

to create secret


kubectl get service

kubectl apply -f .\service.yaml

to remove images 

docker image rm localhost:5000/employeeservice

build the docker image 
docker build -t localhost:5000/employeeservice .


to delete all 
 kubectl delete --all all


 to enable minikube to use minikube docker enviorment 
 minikube -p minikube docker-env | Invoke-Expression


 minikube start 

  docker pull localhost:5000/alpine


 docker run -d -p 5000:5000 --restart=always --name registry -v C:\Users\bhupender.kumar\dockerregistry\auth:/auth -e "REGISTRY_AUTH=htpasswd" -e "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm"  -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd -v C:\Users\bhupender.kumar\dockerregistry\certs:/certs -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt   -e REGISTRY_HTTP_TLS_KEY=/certs/domain.key registry:2



to delete all images unclaimed by container 
docker image prune -a







-- commands to resolve the kubectl or microk8s docker private repository x509 certificate issue 




1(650  microk8s start & microk8s.inspect
  651  sudo iptables -P FORWARD ACCEPT
  652  microk8s start & microk8s.inspect
  653  microk8s start & microk8s.inspect & microk8s.status
  654  microk8s status
  655  containerd config default > /etc/containerd/config.toml
  656  cd /etc/containerd/
  657  vi config.toml 
  658  microk8s status
  659  microk8s.inspect
  660  microk8s.status
  661  vi  /var/snap/microk8s/current/args/containerd-template.toml
  662  microk8s.status
  663  microk8s start
  664  vi  /var/snap/microk8s/current/args/containerd-template.toml
  665  microk8s start
  666  microk8s.status
  667  microk8s.inspect
  668  df -h
  669  microk8s.reset
  670  microk8s status
  671  sudo snap remove microk8s
  672  sudo snap install microk8s
  673* sudo snap get microk8s 
  674  sudo snap install microk8s --classic
  675  microk8s.staus
  676  k.status
  677  kubectl status
  678  microk8s
  679  microk8s status
  680  clear
  681  microk8s stop
  682  microk8s start 
  683  microk8s staus
  684  sudo snap alias microk8s.kubectl k
  685  k status
  686  sudo snap alias microk8s m
  687  m status
  688  cd
  689  cd kube/
  690  k apply -f pod.yml 
  691  k get pods
  692  k kubectl get service -n private-reg
  693  k  get service -n private-reg
  694  k  get service 
  695  vi service.yml
  696  vi pod.yml 
  697  k delete --all all
  698  k get pods
  699  clear
  700  k apply -f pod.yml 
  701  vi service.yml 
  702  vi httpdservice.yml
  703  k create -f service.yml 
  704  ll
  705  k create -f httpdservice.yml 
  706  k get svc
  707  curl 1.2.4.120
  708  curl -i  1.2.4.120
  709  curl 10.0.2.15:80
  710  curl 10.0.2.15:8080
  711  curl 10.0.2.15:8086
  712  curl 10.152.183.210
  713  curl -i 1.2.4.114
  714  k get pods
  715  k get service
  716  k delete --all all
  717  history -> history.txt
  718  history_ 
  
 ) 
 
 
 second 
  638  docker run hello-world
  639  sudo service docker start
  640  docker run hello-world
  641  sudo systemctl unmask docker
  642  sudo systemctl start docker
  643  docker
  644  docker run hello-world
  645  su
  646  pa55word
  647  microk8s.inspect
  648  microk8s status
  649  sudo journalctl -u snap.microk8s.daemon-kubelite
  650  sudo systemctl restart snap.microk8s.daemon-containerd.service
  651  vi var/snap/microk8s/current/args/containerd
  652  vi /var/snap/microk8s/current/args/containerd
  653  microk8s inspect
  654  microk8s status
  655  microk8s inspect
  656  systemctl status snap.microk8s.daemon-kubelet
  657  sudo snap install microk8s --classic --edge
  658  vi /var/snap/microk8s/current/args/kubelet
  659  clear
  660  microk8s stop 
  661  start
  662  microk8s start
  663  sudo snap alias microk8s.kubectl k
  664  sudo microk8s.status
  665  sudo snap info microk8s
  666  sudo snap alias microk8s.kubectl kubectl
  667  k create deployment nginx --image=nginx
  668  clear
  669  k get events -w
  670  microk8s.ctr --debug images pull -u 10.0.2.15:5000/employee --skip-verify 10.0.2.15:5000/employee 
  671  microk8s.ctr --debug images pull -u employee --skip-verify 10.0.2.15:5000/employee 
  672  microk8s.ctr --debug images pull -u employee --skip-verify 10.0.2.15:5000/employee:latest
  673  docker logout 10.0.2.15:5000
  674  docker login 10.0.2.15:5000
  675  microk8s.ctr --debug images pull -u employee --skip-verify 10.0.2.15:5000/employee:latest
  676  microk8s.ctr --debug images pull -u testuser --skip-verify 10.0.2.15:5000/employee:latest
  677  cp /etc/docker/certs.d/10.0.2.15\:5000/ca.crt /etc/ssl/certs/
  678  update-ca-certificates
  679  k get pods
  680  k delete --all all
  681  cd kube/
  682  microk8s stop && microk8s start
  683  k get events -w
  684  k delete secrets 
  685  k delete secrets --name regcred
  686  k delete secrets regcred
  687  k get secrets
  688  kubectl create secret docker-registry regcred --docker-server=10.0.2.15:5000 --docker-username=testuser --docker-password=testpassword --docker-email=test@test.com
  689  k  create secret docker-registry regcred --docker-server=10.0.2.15:5000 --docker-username=testuser --docker-password=testpassword --docker-email=test@test.com
  690  k delete --all all
  691  k get events -w
  692  history


copy ca cert certificate
